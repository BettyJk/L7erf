{
    "content": "Note de cours \nINFORMATIQUE INDUSTRIELLE \n\nNiveau : 4éme Année \n\nDépartement : AEEE \n\nPréparé par : Pr SABOR Jalal, Pr HAFIANE Morad \n\nAnnée universitaire 2022-2023 \n\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n\fCHAPITRE I : Le GRAFCET \n\nChapitre I : Le GRAFCET  \n(GRAphe Fonctionnel de Commande, Etape et Transition) \n\nI.  Définition \n\nEn  1977,  le  GRAFCET  a  été  développé  en  France  pour  être  un  outil  de  conception  et  de \nprogrammation des systèmes automatisés de production. Il a été normalisé en 1987. \n\nFigure 1 : Exemple d’un GRAFCET \n\nIl permet de traduire et de normaliser de manière graphique un cahier des charges selon trois \nniveaux :  \n\n1.  GRAFCET niveau 1 :  \n\nDescription  fonctionnelle  sans  tenir  compte  de  l’aspect  technologique  des  capteurs  et \nactionneurs \n\n2.  GRAFCET niveau 2 :  \n\nDescription  de  l’automatisme  en  tenant  compte  de  l’aspect  technologique  des  capteurs  et \nactionneurs. \n\n3.  GRAFCET niveau 3 :  \n\nOpérationnel  en  tenant  compte  de  la  fiabilité,  maintenabilité  et  mode  marche/arrêt  du \nprocessus.  \nAussi la représentation d'un système automatisé par un GRAFCET prend en compte le \"point \nde  vue\"  selon  lequel  l'observateur  s'implique  au  fonctionnement  de  ce  système.  On \ndistingue trois \"points de vue\" : \n\n•  GRAFCET du point de vue système ; \n•  GRAFCET du point de vue partie opérative ; \n•  GRAFCET du point de vue partie commande. \n\nLe  fonctionnement  d’un  automatisme  logique  peut  être  représenté  par  un  ensemble \nd’ETAPES  auxquelles sont associées des  ACTIONS, de  TRANSITIONS auxquelles sont \nassociées des RECEPTIVITES et des LIAISONS orientées. \n\nNiveau 4eme année ENSAM-Meknès \n\nSABOR Jalal & HAFIANE Morad \n\n \n \n \n \n \n \n\fCHAPITRE I : Le GRAFCET \n\nII.  Les éléments du GRAFCET \n\n1.  Etape \n\nUne situation stable où il se trouve l’automatisme durant son évolution., elle est représentée \npar un carré ou rectangle avec un numéro et un nom en option. \n\n 0 \n\n1 \n\nFigure 2 : Etape initiale (0), Etape normale (1) \n\nUne étape est soit active, soit inactive. Elle est dite active lorsque le système ou une partie du \nsystème se trouve dans la situation qui correspond à cette étape. \n\nLa situation d’un automatisme est définie par les étapes actives. \n\n2. \n\nAction \n\nOn associe pour chaque étape une ou les actions à effectuer. Ces dernières ne sont exécutées \nque lorsque l’étape est active. Elles sont listées à gauche de l’étape auxquelles sont associées.\n\n1 \n\nEvacuer la pièce \n\nSortir la tige du \nVérin \n\nFigure 3 : Actions associées à l’étape 1 \n\n3. \n\nTransition :  \n\nC’est l’évolution ou passage entre les différentes étapes. On associe à chaque transition une \ncondition logique appelée « Réceptivité ».  Elle est représentée par une barre horizontale. \n\nTransition \n\n1 \n\n2 \n\nFigure 4 : Transition \n\nNiveau 4eme année ENSAM-Meknès \n\nSABOR Jalal & HAFIANE Morad \n\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n\fCHAPITRE I : Le GRAFCET \n\n4. \n\nRéceptivité :  \n\nC’est une condition logique  formée  par les états de  capteurs. Elle est placée  à  droite de la \ntransition. \n\n1 \n\n2 \n\nRéceptivité \n\nFigure 5 : Réceptivité associée à une transition \n\n5. \n\nLiaisons orientées : \n\nElles indiquent les voies d’évolution de la situation du GRAFCET.  Elles relient les étapes et \ntransitions, elles sont représentées par une barre verticale sans ou avec une flèche.  \n\nLiaison \norientée \n\nRéceptivité \n\n1 \n\n2 \n\n Remarque \n\nFigure 6 : Liaison orientée \n\n✓  Une étape est dite active lorsque l’automatisme se retrouve dans cette étape. \n✓  Les actions qui lui sont associées ne sont exécutées que lorsque l’étape est active. \n✓  Le GRAFCET est parcouru par défaut du haut vers le bas. \n\nExemple : Poinçonneuse \nA  l’état initial le  poinçon est en  position haute,  l’opérateur installe  la pièce, une  action sur \nmarche fait descendre le poinçon jusqu’à la position basse, puis il retourne en position initiale \n\nNiveau 4eme année ENSAM-Meknès \n\nSABOR Jalal & HAFIANE Morad \n\n \n \n \n\fCHAPITRE I : Le GRAFCET \n\nGRAFCET fonctionnel \n\nFigure 7 : Poinçonneuse à vérin  \n\nFigure 8 : GRAFCET au point de vue fonctionnel de la poinçonneuse \n\nCycle de fonctionnement d’une perceuse \n\nUne  fois  la  broche  est  en  position  haute  h,  et  elle  est  détectée  en  rotation  permanente, \nl’opérateur  donne  l’information  départ  cycle.  La  broche  descend  avec  une  grande  vitesse \njusqu’au position b1, puis elle effectue le perçage en petite vitesse jusqu’au position b2. Dès le \nperçage est terminé la broche remonte en grande vitesse jusqu’au position haute. \n\nNiveau 4eme année ENSAM-Meknès \n\nSABOR Jalal & HAFIANE Morad \n\n \n \n \n \n\fCHAPITRE I : Le GRAFCET \n\nGRAFCET de point de vue système \n\nFigure 9 : schéma de la perceuse  \n\nFigure 10 : GRAFCET au point de vue système de la perceuse \n\nNiveau 4eme année ENSAM-Meknès \n\nSABOR Jalal & HAFIANE Morad \n\n \n \n \n \n \n\fCHAPITRE I : Le GRAFCET \n\nIII.  Les règles d’évolution \n\n1.  Règle N°1 : Situation initiale  \n\nLa  situation  initiale  d'un  GRAFCET  caractérise  le  comportement  initial  de  la  partie \ncommande  vis-à-vis  de  la  partie  opérative,  elle  correspond  aux  étapes  actives  au  début  du \nfonctionnement : ces étapes sont les étapes initiales. \n\nL’étape initiale est représentée par un double carré ou double rectangle \n\n 0 \n\nFigure 11 : Etape initiale \n\n2. \n\nRègle 2 : Franchissement d'une transition  \n\nUne transition est dite validée lorsque toutes les étapes amonts (immédiatement précédentes \nreliées à cette transition) sont actives.  \n\nLe franchissement d'une transition se produit :  \n\n•  Lorsque la transition est validée.  \n•  La réceptivité associée à cette transition est vraie  \n\nRemarque  \nLorsque les deux conditions sont vérifiées, la transition est obligatoirement franchie. \n\n3. \n\nRègle 3 : Evolution des étapes actives  \n\nLe  franchissement d'une transition entraîne  simultanément l'activation de  toutes les étapes \nimmédiatement suivantes et la désactivation de toutes les étapes immédiatement précédentes.  \n\n4. \n\nRègle 4 : Evolution simultanée  \n\nPlusieurs transitions simultanément franchissables sont simultanément franchies.  \n\n5. \n\nRègle 5 : Activation et désactivation simultanée d'une étape  \n\nSi au cours du fonctionnement la même étape est simultanément activée et désactivée elle reste \nactive. \n\nIV.  Compléments sur GRAFCET \n\n1.  Divergence en OU \n\nFigure 12 : Divergence en OU \n\nNiveau 4eme année ENSAM-Meknès \n\nSABOR Jalal & HAFIANE Morad \n\n \n \n \n\fCHAPITRE I : Le GRAFCET \n\nSi étape 1 active :  \n\n•  Si a=1 seul alors désactivation de 1 activation étape 2 et 3 inchangée.  \n•  Si a=1 et b=1, lorsque 1 devient active, alors désactivation 1, activation 2et 3.  \n2.  Convergence en OU  \n\nFigure 13 : Convergence en OU \n\nSi étape 1 active : \n\n•  Et a =1, b=0 alors activation de 3 et désactivation de 1.  2 reste inchangée  \n•  Si 1 et 2 active et a=1, b=1 alors désactivation 1 et 2, activation 3 \n3.  Sélection exclusive \n\nPour obtenir une sélection exclusive, il est nécessaire de s'assurer que toutes les réceptivités \nassociées  aux  transitions  sont  exclusives  au  point  de  vue  physique,  c’est  à  dire  qu'elles  ne \npeuvent pas être vraies simultanément. \n\n4.  Divergence en ET  \n\nFigure 14 : Sélection sélective \n\nSi 1 active et si a=1, alors désactivation de 1 et activation de 2 et 3.  \n\nFigure 15 : Divergence en ET \n\nNiveau 4eme année ENSAM-Meknès \n\nSABOR Jalal & HAFIANE Morad \n\n \n \n \n \n\f5.  Convergence en ET  \n\nCHAPITRE I : Le GRAFCET \n\nFigure 16 : Convergence en ET \n\nSi 1 active seule et a alors aucun changement.  \nSi 1 et 2 et a, alors activation de 3 et désactivation de 1 et 2. \n\n6.  Saut d’étapes \n\n7.  Boucle répéter jusqu’au   \n\nFigure 17 : Saut d’étape \n\nRépéter des étapes jusqu’à ce que la condition f.c soit vraie \n\nFigure 18 : Boucle répéter jusqu’à \n\nNiveau 4eme année ENSAM-Meknès \n\nSABOR Jalal & HAFIANE Morad \n\n \n \n \n \n \n\fCHAPITRE I : Le GRAFCET \n\nV.  Différents types d'actions associées aux étapes \n\nOn notera Xi la variable binaire associée à l'étape n°i , Donc nous avons Xi=1 si étape i est \nactive. \n\n1.  Action continue  \n\nOn effectue A pendant toute la durée de l'activité de l'étape 1  \n\nFigure 19 : Action continue \n\n2.  Action conditionnelle  \n\nOn effectue A si l'étape 1 est active ET si b=1 \n\nFigure 20 : Action conditionnelle \n\n2 \n\nSi b: A \n\nUne autre écriture normalisée \n\nFigure 21 : Action conditionnée (autre écriture) \n\n3.  Action à durée limitée \n\nL’action est exécutée tant que la temporisation n’est pas terminée. L’action M ne dure que 3 \nsecondes à partir du début de l’étape X7 \n\nNiveau 4eme année ENSAM-Meknès \n\nSABOR Jalal & HAFIANE Morad \n\n \n \n \n \n \n \n \n \n \n \n\fCHAPITRE I : Le GRAFCET \n\n3S/X7 \n\nX7/t/3S \n\nFigure 22 : Action à durée limité (2 représentation normalisées) \n\nFigure 23 : Chronogramme d’une action à durée limité (a : réceptivité suivante) \n\n4.  Action à durée retardée \n\nL’action n’est exécutée que si le délai est écoulé. L’action M ne débute que 3 secondes à partir \ndu début de l’étape X7 \n\n3S/X7 \n\nX7/t/3S \n\nFigure 24 : Action à durée retardé (2 représentations normalisées) \n\nFigure 25 : Logigramme d’une action à durée retardée (a : réceptivité suivante) \n\nNiveau 4eme année ENSAM-Meknès \n\nSABOR Jalal & HAFIANE Morad \n\n \n \n \n \n\f5.  Action mémorisée  \n\nElle commence avec le début de l'étape 4 et se termine avec le début de l'étape 7 \n\nCHAPITRE I : Le GRAFCET \n\nFigure 26 : Grafcet avec actions mémorisées et chronogramme  \n\nVI.  Différents types de réceptivités associées aux transitions \n\n1.  Franchissement sur niveau \n\n0 \n\n1 \n\n1 \n\n8 \n\n10 \n\n12 \n\np.(va+vb) \n\n=1 \n\nX4+X5 \n\na.(t>t1)+c<1\n0 \n\n9 \n\n2 \n\n11 \n\n13 \n\n3 \n\n4 \n\nFigure 27 : 1- Transition franchie si l’étape 0 est active ET p.(va+vb)=1 ; 2- Transition toujours \nfranchie si l’étape 8 est active ; 3- Transition franchie si étape 10 ET (l’étape 4 OU étape5) sont actives ; 4- \nTransition franchie Si l’étape 12 est active  ET [a.(t>t1)+C<10 ] =1 \n\n2.  Franchissement sur front \n\nOn appelle front montant de la variable binaire a, la variable, notée ↑a, qui prend la valeur 1 à \nl’instant du passage de 0 à 1 de la variable a. \n\nOn appelle front descendant de la variable binaire a, la variable, notée ↓a, qui prend la valeur \n1 à l’instant du passage de 1 à 0 de la variable a. \n\nNiveau 4eme année ENSAM-Meknès \n\nSABOR Jalal & HAFIANE Morad \n\n \n \n \n \n \n\fCHAPITRE I : Le GRAFCET \n\n0 \n\n1 \n\n1 \n\n8 \n\n↑a \n\n↓a \n\n9 \n\n2 \n\nFigure 28 : 1- Transition franchie si l’étape 0 est active ET la détection du front montant de a; 2- Transition \nfranchie si l’étape 8 est active ET détection du front descendant de a ;  \n\nVII.  Comptage \n\nIl est souvent nécessaire de compter un nombre de cycles ou de pièces, d’évènements dans un \nGRAFCET. \n\nUn cycle de comptage comprend en général : \n\n• Une initialisation de la variable de comptage. \n• Une incrémentation (ou décrémentation) de cette variable \n• Des réceptivités qui testent la valeur de la variable de comptage. \n\nFigure 29 : Cycle de comptage par deux méthodes différentes \n\nNiveau 4eme année ENSAM-Meknès \n\nSABOR Jalal & HAFIANE Morad \n\n \n \n \n \n \n \n\fCHAPITRE I : Le GRAFCET \n\nVIII.  Temporisation \n\nLa prise en compte du temps peut aussi être réalisée dans la réceptivité. La temporisation est \nlancée dès l’activation de l’étape X7, elle n’est effective qu’au bout du temps T=3 secondes. La \nréceptivité étant vraie, la transition est franchie. \n\n7 \n\nM \n\n7 \n\nM \n\nX7/t/3S \n\n3S/X7 \n\nFigure 30 : Temporisateur dans la réceptivité (deux méthodes différentes) \n\nFigure 31 : Chronogramme d’un temporisateur \n\nIX.  Exemple : poinçonneuse avec GRAFCET niveau 2 \n\nDans  ce  niveau  on  doit  tenir  compte  des  spécifications  technologiques  des  capteurs  et \nactionneurs. Pour cet exemple, supposons que les mouvements de descente et de montée sont \nobtenus soit par un vérin pneumatique double effet, soit par un vérin pneumatique simple \neffet et que les informations « haute » et « bas » sont obtenues au moyen de fins de course \npneumatiques, et que l’information départ est donnée par un bouton poussoir pneumatique \n\nFigure 32 : GRAFCET poinçonneuse avec vérin double effet \n\nNiveau 4eme année ENSAM-Meknès \n\nSABOR Jalal & HAFIANE Morad \n\n \n \n \n \n \n \n \n\fCHAPITRE I : Le GRAFCET \n\nFigure 33 : GRAFCET poinçonneuse avec vérin simple effet \n\nNiveau 4eme année ENSAM-Meknès \n\nSABOR Jalal & HAFIANE Morad \n\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n\fCHAPITRE II : GRAFCET avancé \n\nCHAPITRE II : GRAFCET avancé \n\nI. \n\nIntroduction \n\n1.  Enoncé \n\nLe chariot fait des navettes entre un point A et un point B. On veut le commander grâce à \ndeux boutons : Marche et Arrêt. C’est à dire que le chariot commence à effectuer ses cycles \nune fois le bouton Marche aura été appuyé, il s’arrêtera une fois son cycle est terminé et si l’on \na appuyé sur le bouton Arrêt.  \n\nFigure 34 : Chariot en mouvement Gauche-Droit  \n\n2.  Solution proposée \n\nCette solution a un inconvénient : pour arrêter le chariot il faut appuyer sur Arrêt au moment \noù le chariot arrive en A. Ce n’est pas satisfaisant. L’idée est d’avoir un GRAFCET qui lit les \nboutons et qui commande un autre GRAFCET. On parle d’un GRAFCET superviseur \n\nFigure 35 : GRAFCET proposé \n\nNiveau 4eme année ENSAM-Meknès \n\nSABOR Jalal & HAFIANE Morad \n\n \n \n \n \n\fCHAPITRE II : GRAFCET avancé \n\nFigure 36 : GRAFCET de conduite (maitre) ; GRAFCET de fonctionnement normal (Esclave)  \n\nDans ce cas le GRAFCET maître (superviseur) s’occupe du démarrage, de la séquence, de la \nsynchronisation et de l’arrêt de différentes tâches. Chaque tâche est décrite par un GRAFCET \ncommandé par le superviseur, on parle ici de la notion de structures hiérarchisées. \n\nUne  analyse  structurée  d’un  système  permet  de  décrire  celui-ci  par  un  ensemble  de \nGRAFCETs qui correspondent aux différentes fonctions du système. \n\nParmi ces principaux GRAFCETs on trouve : \n\n•  GRAFCET de Surveillance (GS) : (sécurité) : Il décrit l’ensemble des procédures de \n\nsécurité (arrêt d’urgence, mise en route). \n\n•  GRAFCET de Conduite (GC) : Il décrit la procédure du mode Marche (cycle, auto, \n\nmanuel) /Arrêt. \n\n•  GRAFCET de Maintenance (GM) : Il décrit la procédure de réglage de la partie PO. \n•  GRAFCET de Production Normale (GPN ou GFN) : Il décrit le fonctionnement \n\nnormal du système. \n\nGRAFCET Maitre \n\nGS \n\nGC \n\nGM \n\nGPN \n\nGRAFCET Esclave \n\nFigure 37 : Structure Hiérarchique des GRAFCETs \n\nNiveau 4eme année ENSAM-Meknès \n\nSABOR Jalal & HAFIANE Morad \n\n \n \n \n\fCHAPITRE II : GRAFCET avancé \n\nII.  Macro - représentations. \n\nUne  macro-représentation  consiste  à  remplacer  une  partie  d'un  GRAFCET  par  une \nreprésentation beaucoup plus condensée sous la forme : \n\n•  D'une macro-étape ; \n•  D'une tâche ; \n\n3.  Macro-étape  \n\nUne  macro-étape  est  une  représentation  unique  d'un  ensemble  d'étapes  et  de  transitions \nappelée expansion de la macro-étape.  \n\nRemarque : Aucune action ne doit être associée à une macro-étape. \n\n•  L'expansion a toujours une étape d'entrée (E) et une étape de sortie (S) ;  \n•  L'étape d'entrée est active dès le franchissement de la transition amont de la macro-\n\nétape ;  \n\n•  L'activation  de  l'étape  de  sortie  de  l'expansion  déclenche  le  franchissement  de  la \n\ntransition aval de la macro-étape ; \n\nFigure 38 : Représentation normalisée d’une macro-étape \n\nFigure 39 : 1- Expansion d’une Macro-étape \n\nNiveau 4eme année ENSAM-Meknès \n\nSABOR Jalal & HAFIANE Morad \n\n \n \n \n\fCHAPITRE II : GRAFCET avancé \n\n4.  Structure d'un GRAFCET de tâche  \n\nLes tâches ont pour but de simplifier et de faciliter la description de systèmes complexes en \nallégeant le graphisme d’un GRAFCET et en détaillant séparément certaines parties. \n\nFigure 40 : GRAFCET des tâches \n\nIII. \n\nStructure d'un Sous-GRAFCET  \n\nDans les automatismes séquentiels, il est fréquent de rencontrer des séquences répétitives dans \nle même cycle. Une séquence répétitive peut être représentée par un sous-GRAFCET ou un \nGRAFCET sous-programme. Cette notion s’est empruntée au langage informatique. \n\nUn  GRAFCET  sous-programme  est  écrit  sous  la  forme  d’un  GRAFCET  indépendant, \nconnecté au GRAFCET principal. \n\n* \n\nFigure 41 :  GRAFCET sous-programme \n\nNiveau 4eme année ENSAM-Meknès \n\nSABOR Jalal & HAFIANE Morad \n\n \n \n \n \n\fCHAPITRE II : GRAFCET avancé \n\nIV.  Etape encapsulante : \n\n•  Une  étape  encapsulante  contient  un  ensemble  d'étapes  encapsulées  sous  forme  de \n\ngraphes partiels.  \n\n•  Un graphe encapsulé peut lui-même contenir une étape encapsulante. \n•  Une étape encapsulante peut être initiale \n•  La  désactivation  d'une  étape  encapsulante  provoque  la  désactivation  de  toutes  les \n\nétapes de ses graphes encapsulés. \n\nL’astérisque placé à côté de l’étape 11 de l’encapsulation indique l’étape qui sera activée au \nmême instant que l’étape encapsulante 1 \n\nFigure 42 :  Encapsulation des étapes \n\nV.  Forçage \n\n•  Le forçage est le passage imposé de la situation courante du GRAFCET à une situation \n\ndéterminée et différente de celui-ci. \n\n•  Le GRAFCET forcé évolue alors sans franchissement de transition. \n•  Les GRAFCETs forcés sont maintenus dans la situation de forçage tant que l’ordre de \n\nforçage est valide. \n\n•  A tout instant le GRAFCET ne peut être forcé que dans une situation et une seule à \n\npartir d’un et d’un seul GRAFCET supérieur. \n\n•  La situation de forçage est prioritaire à toute activité du GRAFCET. \n\nLe forçage est une action continue, notée dans un double cadre, qui agit sur le graphe Gi noté  \n\nF/Gi \n\nOn peut également forcer un GRAFCET :  \n\n•  Soit en situation non vide \n•  Soit en situation vide \n\n1.  Forçage en situation non vide : \n\nL'ordre  de  forçage  provoque  simultanément  l'activation  des  étapes  correspondantes  à  la \nsituation imposée et la désactivation des autres étapes du GRAFCET forcé. \n\nExemple 1 : \n\n•  L'activation de l'étape 10 du GRAFCET G1 force le GRAFCET G2 .  \n•  L'étape  21  est  activée  (forcée  à  1),  les  autres  étapes  du  GRAFCET  G2  sont \n\ndésactivées (forcées à 0). \n\nNiveau 4eme année ENSAM-Meknès \n\nSABOR Jalal & HAFIANE Morad \n\n \n \n \n \n\fCHAPITRE II : GRAFCET avancé \n\nFigure 43 : Forçage à l’étape 21 du GRAFCET G2 par G1 \n\nExemple 2 : \n\nA l'activation de l'étape 5, toutes les étapes 20, 23, 24, du GRAFCET 2 sont désactivées et les \nétapes 21, 22 sont activées. A la désactivation de 5, il reprend son évolution normale. \n\nFigure 44 :  Forçage à l’étape 21 et 22 du GRAFCET 2 \n\nNiveau 4eme année ENSAM-Meknès \n\nSABOR Jalal & HAFIANE Morad \n\n \n \n \n \n \n \n\fCHAPITRE II : GRAFCET avancé \n\nExemple 3 : \n\nA l'activation de l'étape 5, l'étape initiale 20 du GRAFCET 2 est activée et toutes les autres \nétapes sont désactivées. A la désactivation de 5, il reprend son évolution normale. \n\nFigure 45 : Forçage à l’étape initiale du GRAFCET 2 \n\n2.  Forçage en situation vide  \n\nProvoque simultanément la désactivation de toutes les étapes du GRAFCET forcé y compris \nles étapes initiales. \nLe GRAFCET figé voit son évolution stoppée dès l’apparition de l’ordre de figeage. \n\nExemple : \nA l'activation de l'étape 5, toutes les étapes du GRAFCET 2 sont désactivées. Le forçage à \nvide nécessite par la suite le forçage dans une situation non vide pour pouvoir redémarrer. \n\nFigure 46 : Forçage en situation vide du GRAFCET 2 \n\nNiveau 4eme année ENSAM-Meknès \n\nSABOR Jalal & HAFIANE Morad \n\n \n \n \n \n\fCHAPITRE II : GRAFCET avancé \n\n3.  Figeage dans une situation courante  \n\nC'est un cas particulier du forçage, Il s'agit de maintenir le forçage dans la situation courante \nc'est à dire bloquer (gel) l'évolution du GRAFCET. \n\nLe GRAFCET figé voit son évolution stoppée dès l’apparition de l’ordre de figeage. L’ordre \nde  figeage  est  toujours  vrai  indépendamment  des  réceptivités.  Il  est  souvent  nécessaire  de \nbloquer simultanément les sorties. \n\nExemple : \nA l'activation de l'étape 5, le GRAFCET est figé dans la situation de cet instant : si 22 et 23 \nétaient actives au moment du forçage, elles le restent, jusqu'à désactivation de l'étape 5.  \n\nLe GRAFCET reprend alors son évolution normale. \n\nFigure 47 : Forçage en situation courante du GRAFCET 2 \n\nExemple 1 : Chariot \nSoit  un  petit  wagonnet  mis  en  mouvement  par  un  moteur  électrique  commandé  par  un \ncontacteur KM1 (à droite) et KM2 (à gauche). \n\n•  Le départ vers la droite se fait par un bouton poussoir S3. \n•  Le retour vers la gauche se fait automatiquement par S1. \n•  L’arrêt à gauche se fait automatiquement par S2. \n•  L’arrêt d’urgence se fait le bouton S4. \n\nFigure 48 : Chariot \n\nNiveau 4eme année ENSAM-Meknès \n\nSABOR Jalal & HAFIANE Morad \n\n \n \n \n\fCHAPITRE II : GRAFCET avancé \n\na.  Gestion de Sécurité \n\nLes arrêts d’urgence ou de dysfonctionnement qui peuvent survenir à tout instant, quelle que \nsoit l’étape active, l’installation doit être stoppée et remis à l’étape initiale. \nPour cela on rajoute un autre GRAFCET, avec l’un prioritaire sur l’autre. C’est un GRAFCET \nhiérarchisé. \n\nFigure 49 : GRAFCET hiérarchique : Niveau 1 \n\nG1 {10} \n\nG1  \n\nFigure 50 : GRAFCET hiérarchique : Niveau 2 \n\nNiveau 4eme année ENSAM-Meknès \n\nSABOR Jalal & HAFIANE Morad \n\n \n \n \n \n \n \n\fCHAPITRE II : GRAFCET avancé \n\nExemple 2 : \nLe pupitre de commande est équipé de : \n\n•  D’un sélecteur à trois positions permettant de choisir le mode de marche : Auto. \n\nSemi (Semi-auto) / Manu (Pas à pas = Etape par étape). \n\n•  D’un bouton de mise en marche M et d’un autre d’arrêt A connectés aux entrées \n\nd’une mémoire délivrant une information V : (V=1 : marche, V=0 : arrêt). \n\n•  D’un bouton de départ de cycle Dcy. \n•  D’un bouton arrêt d’urgence AU et d’un bouton de réarmement REA. \n\na.  Conditions initiales : \n\nFigure 51 : GRAFCET hiérarchique :  \n\nA la mise sous tension : \nGS force GC à l’étape 100 et GPN à l’étape 1. Si AU n’est pas enclenché, et si l’on appui sur \nREA, GS passe à l’étape 11. Donc GC et GPN peuvent évoluer. \nL’opérateur choisit son mode de marche et appuie sur M=> V=1 \nSi AUTO : \n101  est  activée  (si  CI  est  vraie)  donc  le  GPN  déroule  son  cycle  indéfiniment  jusqu’à  la \ndisparition de V(A) ou l’apparition d’un autre mode de marche. \nSi Semi : \n102 est activée. Le départ du cycle GPN est conditionnée à l’appui sur DCY. Un seul cycle \ns’effectue. Il faut réappuyer sur Dcy pour un nouveau départ cycle. \nSi Manu : \nLe GPN est forcé à l’étape 1 par le GC. Les commandes manuelles sont validées. L’opérateur \npeut faire ses réglages. \nA n’importe quel moment, un appui sur AU (Arrêt d’urgence) fait passer GS à l’étape 10. Donc \nGC est forcé à l’étape 100 et GPN à l’étape 1.  Le redémarrage ne peut avoir lieu que si AU \nest désenclenché et si l’on appuie sur REA \n\nNiveau 4eme année ENSAM-Meknès \n\nSABOR Jalal & HAFIANE Morad \n\n \n \n \n\fCHAPITRE II : GRAFCET avancé \n\nFigure 52 : GRAFCET hiérarchique : \n\nExemple 3 : Commande d’une perceuse \n\nb.  Fonctionnement normal : \n\n•  En position repos, le foret est en position haute A. \n•  Le démarrage s'effectue par appui et relâchement d'un bouton noté MA. \n\nDès le relâchement de MA, le foret doit entrer en rotation et simultanément le cycle de perçage \ndoit commencer comme suit : \n\n•  Descente rapide de A en B. \n•  Descente lente de B en C, (perçage). \n•  Montée du foret de C en B, (débourrage). \n•  Descente rapide de B en C. \n•  Descente lente de C en D, (perçage). \n•  Montée du foret de D en A. \n\nArrivé en A, arrêt de la montée et de la rotation ; un nouveau cycle ne pourra redémarrer que \nsur commande de MA. \n\nc.  Gestion de l'arrêt d’urgence : \n\nA l'apparition d'un signal AU, (arrêt d'urgence), arrêt de toutes les actions en cours. \nTant que AU = 1, aucune évolution n'est possible. \nL'appui  sur  un  bouton  poussoir  REP,  (reprise),  provoque  le  retour  du  foret  en  conditions \ninitiales, (montée jusqu'en A).  \nLe préparant ainsi à recevoir une nouvelle commande de démarrage MA. \n\nNiveau 4eme année ENSAM-Meknès \n\nSABOR Jalal & HAFIANE Morad \n\n \n \n\fCHAPITRE II : GRAFCET avancé \n\nFigure 53 : Schéma d’une perceuse : \n\nNiveau 4eme année ENSAM-Meknès \n\nSABOR Jalal & HAFIANE Morad \n\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n\fCHAPITRE III : Implantation du GRAFCET \n\nChapitre II : Automate \nProgrammable Industriel \n\nI.  Architecture interne d’un automate programmable industriel (API) \n\nUn API est dispositif électronique capable d’exécuter des programmes en vue de la commande \ndans un environnement industriel. Son architecture interne est donnée par : \n\nFigure 54 : 1- Architecture interne d’un API : \n\nL'automate programmable reçoit les informations relatives à l'état du système par les capteurs \net puis commande les pré-actionneurs suivant le programme inscrit dans sa mémoire. \n\nUn API se compose donc de trois grandes parties : \n\n•  Le processeur ; \n•  La zone mémoire ; \n•  Les interfaces Entrées/Sorties \n\n1.  Processeur :  \n\nLe  microprocesseur  réalise  toutes  les  fonctions  logiques  ET,  OU,  les  fonctions  de \ntemporisation, de comptage, de calcul arithmétique à partir d'un programme contenu dans sa \nmémoire. \n\n2.  Zone Mémoire : \n\nElle est composée de deux zones : \n\n•  Zone mémoire de données : pour stocker les données temporaires \n•  Zone mémoire utilisateur pour stocker le programme  \n\nExemple :  Mémoire vive RAM, mémoire morte effaçable EEPROM \n\n3.  Les interfaces d'entrées/sorties  \n\nLes entrées reçoivent des informations en provenance des éléments de détection (capteurs) et \ndu pupitre opérateur (BP). (Soit de type Tout ou Rien ou analogique) \n\nLes sorties transmettent des informations  aux pré-actionneurs (relais,  électrovannes …) et \naux éléments de signalisation (voyants) du pupitre. (Soit de type Tout Ou Rien ou analogique) \n\nNiveau 4eme année ENSAM-Meknès \n\nSABOR Jalal & HAFIANE Morad \n\n \n \n \n \n\fCHAPITRE III : Implantation du GRAFCET \n\nII.  Automate   TSX Micro de chez Télémécanique \n\nLes versions de Télémécanique :  \n\n•  Automates Modicon Micro. TSX 3705/ 3708/ 3710/ 3720.  \n•  Automates Premium : TSX P57 2623/2823M \n\nSon synoptique est donné par le schéma suivant : \n\nFigure 55 : Synoptique d’un API TSX Micro 3710 : \n\nIl est composé par une unité centrale et des modules d’entrée/sortie.  \n\n1.  Le Module d’entrée type TOR : \n\nChaque module est noté par %I i.j avec i : numéro de module d’entrée et j: numéro d’entrée au \nmodule i. \n\nExemple : %i1.2 présente l’entrée n°2 du module d’entrée n°1 \n\n                  %i3.7   …………………7………………………3 \n\n2.  Module de sortie de type TOR : \n\nChaque module de sortie est noté par : %Qi.j avec i numéro de module de sortie et j : numéro \nde sortie sur le module de sortie i \n\nExemple : %Q2.8 : sortie n°8 du module de sortie n°2 \n\nIII.  Langage de programmation du logiciel PL7 \n\nLe  logiciel  PL7  intègre  plusieurs  langages  de  programmation  permettant  d’implanter  le \nGRAFCET sur les automates Télémécanique. \n\nParmi ces langages on cite :  \n\n•  Langage à contacts ou à relais (LADDER : LD)  \n•  Langage Liste d ’Instructions ou langage Booléen « machine » (IL)  \n•  Langage littéral Structuré (ST) type « informatique ». \n•  Langage « GRAFCET » ou Interface GRAFCET. \n\nDans ce cours on va s’intéresser au langage à contacts et langage « GRAFCET » \nC’est une expression graphique constituée par un ensemble de contacts (entrées) et de bobines \nfictifs (sorties) qui sont reliés entre eux par des connexions horizontales et verticales. \n\nNiveau 4eme année ENSAM-Meknès \n\nSABOR Jalal & HAFIANE Morad \n\n \n \n\fCHAPITRE III : Implantation du GRAFCET \n\n• \n\nIl se compose d’une suite de «  réseaux » exécutés en séquence par l’automate. C’est \nl'ordre de saisie des réseaux qui est pris en compte par le système lors de la scrutation. \n•  Chaque réseau porte une étiquette unique (en option) qui à la syntaxe suivante : %Li \n\n(i,0 à 999).  \n\n•  L’ordre des étiquettes est quelconque. \n•  Chaque réseau est composé par une zone de test et une zone d’action \n•  Chaque réseau est composé de 16 lignes maximums et 11 colonnes (pour automates \n\nPremium), 11 colonnes et 8 lignes pour Automate Micro. \n\n•  Les éléments de base de ce langage sont les contacts, les bobines, les variables internes, \n\nles blocs de fonctions, etc. \n\n•  La  zone  test,  dans  laquelle  figurent  les conditions  nécessaires  à  une  action  (contact \n\nd’entrée, bit interne, etc.) \n\n•  La zone action, qui applique le résultat consécutif à un enchaînement de test (bobines \n\nde sortie, blocs de fonction, etc.) \nIl scrute la zone de test du haut vers le bas et du gauche vers la droite. \n\n• \n•  Puis il exécute la zone d’action simultanée. \n\nFigure 56 : Zone de tests et zone d’actions \n\nNiveau 4eme année ENSAM-Meknès \n\nSABOR Jalal & HAFIANE Morad \n\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n\f1.  Zone de test (variable binaire) : Les contacts \n\nCHAPITRE III : Implantation du GRAFCET \n\nFigure 57 : Eléments de test sur les variables binaires \n\n2.  Zone d’action : Les bobines \n\nTableau 58 Elément d’action sur les variables binaires \n\n3.  Eléments de liaison \n\nLes éléments  graphiques de  liaison  permettent de  relier les éléments graphiques de  test et \nd’action. \n\nNiveau 4eme année ENSAM-Meknès \n\nSABOR Jalal & HAFIANE Morad \n\n \n \n\fCHAPITRE III : Implantation du GRAFCET \n\n4.   Exemple de réseau en CHART \n\nTableau 59 : Eléments de liaison \n\nFigure 60 : Exemple de réseau CHART \n\n5.  Variables internes \n\nOn distingue les variables binaires, entières et en format flottant \n\na.  Les variables binaires : \n\n•  Bits internes : %Mi (i, 0 à 255)  \n•  Bits système : %Si (i, 0 à 127) \n•  Bits images d’activité d’étapes : %Xi (i, 0 à 1023) \n\nRemarque  :  En  général  le  nombre  des  variables  dépend  de  type  d’automate  utilisé  (TSX \nMicro, Premium etc.).  \n\nb.  Les variables entières : \n\n•  Variable entière signée codée sur 16 bits : %MWi (i, 0 à 511) \n•  Variable entière signée codée sur 32 bits : %MDi (i, 0 à 511) \n•  Variable octet codée sur 8 bits (pour caractère) : %MBi (i,0 à 511) \n\nc.  Autres  \n\nLes variables en format flottant en 32 bit: %MFi (i, 0 à 511). \nLes constantes codées sur 16 bits : %KMi (i, 0 à 512) \n\nNiveau 4eme année ENSAM-Meknès \n\nSABOR Jalal & HAFIANE Morad \n\n \n \n\fCHAPITRE III : Implantation du GRAFCET \n\nTest d’une entrée %I1.7 \n\nTest si l’étape X4 est \nactive \n\nBloc de comparaison \nhorizontal \n\nTest d’un bit %M20 \n\n%X1.T=20 \n\nBloc de comparaison \nTemporisation de 2 secondes \nPar défaut on multiplie la valeur \nchoisie par 0.1s \n\nFigure 61 : Eléments de test des variables \n\nIV.  Bloc de fonction : Bloc d’opération  \n\nIl permet d’effectuer les opérations arithmétiques et logiques. \n\n1.  Opérations arithmétiques : \n\nFigure 62 : Si % I1.1 = ‘1’ alors, % MW10 vaudra %MW0+%MW2 \n\nNiveau 4eme année ENSAM-Meknès \n\nSABOR Jalal & HAFIANE Morad \n\n \n \n \n \n \n \n \n \n \n \n \n\fCHAPITRE III : Implantation du GRAFCET \n\nFigure 63 : Incrémenter %MW100 sur un front montant de %M1. 2-%MW1 est la racine carrée de %MW0 \n\n2.  Opérations logiques \n\nFigure 64 : Instructions utilisables : AND (ET bit à bit), OR (OU bit à bit), XOR (OU EXCLUSIF bit à bit), \nNOT (complément logique bit à bit) \n\nFigure 65 : Programmation d’une réceptivité en langage à contact \n\nNiveau 4eme année ENSAM-Meknès \n\nSABOR Jalal & HAFIANE Morad \n\n \n \n \n \n \n \n \n \n\f3.  Réseau de contacts \n\nCHAPITRE III : Implantation du GRAFCET \n\nFigure 66 : Réseau de contact \n\nPhase \n1 \n\n2 \n3 \n\n4 \n5 \n\nDescription \nEvaluation  du  réseau  jusqu’à  rencontre  de  la  1ére  liaison  verticale  de \nconvergence : Contact A, B, C \nEvaluation du premier sous réseau : Contact D. \nPoursuite de l’évaluation du réseau jusqu’à la rencontre de la deuxième liaison \nverticale de convergence : Contact E \nEvaluation du 2éme sous réseau : Contact F et G \nEvaluation de la bobine H. \n\nTableau 1 : Phase d’évaluation d’un réseau de contact \n\nFigure 67 : Saut de programme vers un autre réseau en utilisant les étiquettes %Li du réseau \n\nV.  Bloc fonction temporisateur :  \n\nTemporisateur a 3 modes de fonctionnement :  \n\n•  TON : permet de gérer des retards à l'enclenchement. \n•  TOF : permet de gérer des retards au déclenchement. \n•  TP : permet d'élaborer une impulsion de durée précise. \n\nNiveau 4eme année ENSAM-Meknès \n\nSABOR Jalal & HAFIANE Morad \n\n \n \n\fCHAPITRE III : Implantation du GRAFCET \n\nFigure 68 : Représentation graphique du bloc fonction temporisateur \n\nIl est caractérisé par : \n\nCaractéristiques \n\nNom du temporisateur \nMode \nBase de temps \nValeur courante \n\nRepère \n%TMi \n\nTB \n%TM.V \n\nValeur de présélection \n\n%TM.P \n\nEntrée d’activation \n\nIN \n\nSortie temporisateur \n\n%TM.Q \n\nValeur \n\n0 à 63 pour un TSX 37 \nTON, TOF, TP \n\n1 mn par défaut, 1s,100 ms,10 ms \n%TMi.V mot qui croit de 0 à %TMi.P \n%TMi.P mot qui peut être lu, testé et écrit \npar programme. Il est mis à la valeur 9999 \npar défaut La durée ou le retard élaboré est \n%TMi.P x TB. \nSur  front  montant  (mode  TON  ou  TP)  ou \nfront  descendant  (mode  TOF),  démarre  le \ntemporisateur. \nLe  bit  de  sortie  %TMi.Q  passe  à  l’état \nlogique 1 dès que la valeur courante a atteint \n%TMi.P, puis reste à 1 tant que IN reste à 1. \n\nTableau 2 : Caractéristiques d’un temporisateur \n\n1.  Mode TON (Retard à l’enclenchement). \n\nFigure 69 : Chronogramme d’un temporisateur en mode TON \n\nNiveau 4eme année ENSAM-Meknès \n\nSABOR Jalal & HAFIANE Morad \n\n \n \n\f2.  Mode TOF (retard au déclenchement) \n\nCHAPITRE III : Implantation du GRAFCET \n\nFigure 70 : Chronogramme d’un temporisateur en mode TOF \n\n3.  Mode TP (monostable)  \n\nFigure 71 : Logigramme d’un temporisateur en mode TP \n\nVI.  Structure du programme  \n\nLe programme réalisé peut avoir une structure soit monotâche ou multitâche.  \n\n1.  La structure monotâche :  \n\nElle comporte seulement une tâche maître (MAST) exécutée cycliquement (mode par défaut) \nou périodiquement (période fixé par l’utilisateur). Dans cette tâche, le programme comporte \nun traitement principal et des sous programmes (SR). \n\nLe traitement principal est subdivisé en trois sections : \n\n•  Le traitement préliminaire (PRL) écrit en LD, IL ou ST. Il est exécuté avant la \n\nsection GRAFCET. \n\n•  GRAFCET (CHART) dans laquelle elles sont programmées les réceptivités et les \n\nactions. \n\n•  Le  traitement  postérieur  (POST)  écrit  en  LD,  IL  ou  ST.  Dans  lequel elles  sont \n\nprogrammées les actions. \n\nLe cycle de traitement exécuté par l’automate est : PRL, Chart et POST. \n\nLes  sous-programmes  Sri  (i  de  0  à  254)  se  programment  comme  des  entités  séparées.  Les \nappels aux sous-programmes s’effectuent dans PRL, dans POST, dans les actions associées \naux étapes et même depuis d’autres sous-programmes (8 imbrications maximum). \n\nNiveau 4eme année ENSAM-Meknès \n\nSABOR Jalal & HAFIANE Morad \n\n \n \n\fCHAPITRE III : Implantation du GRAFCET \n\nL’automate exécute les opérations de la tâche MAST dans l’ordre suivant d’une façon cyclique \n: \n\n•  Traitement préliminaire (bit internes, test des entrées.) \n•  Traitement du programme CHART (GRAFCET) \n•  Traitement en postérieur (POST) (mise à jour des sorties) \n\nRetour au programme \n\nAppel au sous-programme \n\nFigure 72 : Structure d’un programme monotâche \n\n2.  Structure multitâche :  \n\nElle  est  utilisée  dans  un  processus  qui  comporte  des  priorités  d’exécution  différentes.  Elle \ncomprend la tâche maître, et une ou plusieurs tâches événementielles (EVT)(leur exécution \nest déclenchée par un appel externe en provenance de certains modules d’entrée). \n\nFigure 73 : Structure d’un programme \n\nNiveau 4eme année ENSAM-Meknès \n\nSABOR Jalal & HAFIANE Morad \n\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n\fCHAPITRE III : Implantation du GRAFCET \n\n3.  Langage « GRAFCET » ou interface IHM \n\nLe GRAFCET se programme sur 8 pages (0 à 7). Chaque page peut comporter 96 étapes \nLe nombre maximum de transitions est de 1024 dont au plus 24 simultanées. \nLa  programmation  s’effectue  soit  par  le  langage  LD,  IL  ou  le  ST.  Les  réceptivités  sont \nassociées aux transitions et les actions sont associées aux étapes. \nBits système associées au GRAFCET \n\nVII.  Les bits systèmes du GRAFCET  \n\n1.  Le bit %S21 (Initialisation du GRAFCET) \n\nCe  bit  système  est  normalement  à  l’état  logique  «  0  ».  La  mise  à  1  de  %S21  provoque  la \ndésactivation des étapes actives et l’activation des étapes initiales. \nCe  bit  est  remis  à  l’état  «  0  »  automatiquement  par  le  système  au  début  du  traitement \nséquentiel juste avant le traitement préliminaire. Le programme utilisateur utilise %S21 doit \nêtre donc obligatoirement placé dans le traitement préliminaire.  \n\nFigure 74 : Activation du bit S21 \n\n2.  Bit %S22 (Reset du GRAFCET) \n\nLa  mise  à  l'état  1  de  %S22  provoque  la  désactivation  des  étapes  actives  de  l'ensemble  du \ntraitement séquentiel. Ce bit est remis automatiquement par système à l’état logique « 0 » au \ndébut du traitement séquentiel. Il faut utiliser ce bit dans le traitement préliminaire PRL. \nCe bit sert au pré positionnement du GRAFCET lors du passage d'un fonctionnement normale \nen marche spécifique ou à l'apparition d'un incident \n\nFigure 75 : Activation du bit S22 \n\nNiveau 4eme année ENSAM-Meknès \n\nSABOR Jalal & HAFIANE Morad \n\n \n \n \n \n \n\fCHAPITRE III : Implantation du GRAFCET \n\n3.  Bit %S23 : (Gel) \n\nLe figeage du GRAFCET s'effectue par le bit système %S23.Normalement à l'état 0, la mise à \nl'état 1 de %S23 provoque le maintien en l'état des GRAFCET. Quelle que soit la valeur des \nréceptivités aval aux étapes actives, les GRAFCET n'évoluent pas. Le gel est maintenu tant \nque  le  bit  %S23  est  à  1.  Ce  bit  n’est  pas  remis  automatiquement  à  l’état  «  0  »  mais  par \nprogramme. \n\nRemarque \nCe bit ne peut arrêter l’exécution des actions qui sont associées à une étape figée active. \n\n4.  Le bit système %S9 \n\nCe  bit  est  remis  à  0  au  début  du  programme  dans  la  parie  PRL.  Il  peut  être  mis  à  1  par \nprogramme dans la partie PRL pour provoquer le forçage des sorties de l’automate à l’état 0. \nLorsqu’il est remis à 0, les sorties sont mises à jour normalement. \n\nNiveau 4eme année ENSAM-Meknès \n\nSABOR Jalal & HAFIANE Morad \n\n \n \n \n\f"
}